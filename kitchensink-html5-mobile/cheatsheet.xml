<?xml version="1.0" encoding="UTF-8"?> 
<!--
    JBoss, Home of Professional Open Source
    Copyright 2013, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<cheatsheet title="HTML5 + Mobile + JAX-RS: Kitchensink quickstart">
  <intro>
    <description>
      This quickstart shows off HTML5 based desktop/mobile web application development with Java EE 6 on JBoss Enterprise Application Platform 6.1 or later. This project uses HTML5, jQuery Mobile, JAX-RS, CDI 1.0, EJB 3.1, JPA 2.0 and Bean Validation 1.0. It includes a persistence unit and some sample persistence and transaction code to help you get your feet wet with database access in enterprise Java.
      <br/><br/>
      <b>HTML5</b>
      <br/><br/>
      HTML5 refers to both the newest version of HTML language, and the set of associated technologies that allow creation of web applications and sites that target various devices.
      <br/><br/>
      <b>jQuery Mobile</b>
      <br/><br/>
      jQuery Mobile is a client-side web framework with touch-friendly widgets. It provides a HTML5-based user-interface that uses semantic markup. Sites built with jQuery Mobile are accessible on all popular smartphone, tablet and desktop devices.  
      <br/><br/>
      <b>JAX-RS: The Java API for RESTful Web Services</b>
      <br/><br/>
      JAX-RS is a new specification in Java EE 6. It allows application developers to easily expose Java services as RESTful web services.
      <br/><br/>
      <b>EJB 3.1</b>
      <br/><br/>
      EJB 3.1 is an update to the EJB specification for Java EE 6. It allows application developers to build business components and services.
      <br/><br/>
      <b>JPA 2.0</b>
      <br/><br/>
      JPA 2.0 is an update to the JPA specification for Java EE 6. It provides application developers with an object-relational mapping facility to manage relational data. 
      <br/><br/>
      <b>Bean Validation</b>
      <br/><br/>
      Bean Validation is a new specification in Java EE 6, inspired by Hibernate Validator. It allows application developers to specify constraints once (often in their domain model), and have them applied in all layers of the application, protecting data and giving useful feedback to users.
      <br/><br/>
    </description>
  </intro>
  <item
    skip="false"
    title="The kitchensink-html5-mobile example in depth">
    <description>
      The kitchensink-html5-mobile application shows off a number of Java EE technologies such as HTML5, jQuery Mobile, JAX-RS, CDI 1.0, EJB 3.1, JPA 2.0 and Bean Validation 1.0. 
      It does this by providing a member registration database, available via HTML5 and JAX-RS.
      <br/><br/>
      As usual, let&apos;s start by looking at the necessary deployment descriptors. By now, we&apos;re very used to seeing <b>beans.xml</b> in <b>WEB-INF/</b> (which can be found in the <b>src/main/webapp</b> directory of the example). Notice that, once again, we don&apos;t need a web.xml. There are two configuration files (which can be found in the <b>src/main/resources</b> directory of the example) â€” <b>WEB-INF/classes/META-INF/persistence.xml</b>, which sets up JPA, and <b>WEB-INF/classes/import.sql</b> which Hibernate, the JPA provider in JBoss Enterprise Application Platform, will use to load the initial users into the application when the application starts. We discussed both of these files in detail in The <b>greeter example in depth</b>, and these are largely the same.
    </description> 
    <command
    required="true"
    returns="currentProject"
    serialization="org.jboss.tools.project.examples.cheatsheet.getProjectForCheatsheet"/>
  </item>
  
  <item
    skip="true"
    title="index.html">
    <description>
    Next, let&apos;s take a look the <b>index.html</b> file the user sees. The HTML page consists of several jQuery Mobile pages. The first one is the introduction page:
    </description>
    <subitem
          label=""
          skip="true">
      <command
      required="false"
      serialization="org.jboss.tools.project.examples.cheatsheet.openFileInEditor(path=/${currentProject}/src/main/webapp/index.html,fromLine=144,toLine=193)"/>
    </subitem>
    <subitem
          label="The content section ...YOU MAY WANT TO BREAK THIS DOWN INTO MULTIPLE SUBITEMS"
          
          skip="true">
      <command
        required="false"
        serialization="org.jboss.tools.project.examples.cheatsheet.openFileInEditor(path=/${currentProject}/src/main/webapp/index.html,fromLine=152,toLine=181)"/>
    </subitem>
    <subitem
            label="and a common footer... "
            skip="true">
        <command
      required="false"
      serialization="org.jboss.tools.project.examples.cheatsheet.openFileInEditor(path=/${currentProject}/src/main/webapp/index.html,fromLine=188,toLine=192)"/>
    </subitem>
      <subitem
              label="Describe more important lines in the file. "
              skip="true">
          <command
        required="false"
        serialization="org.jboss.tools.project.examples.cheatsheet.openFileInEditor(path=/${currentProject}/src/main/webapp/index.html,fromLine=1,toLine=1)"/>
     </subitem>
  </item>
  
  <item
    skip="true"
    title="MemberService.java">
    <description>
      Next, let&apos;s take a look the <b>MemberService</b> class:
    </description>
    <subitem
            label="Talk about the annotations..."
            skip="true">
    <command
      required="false"
      serialization="org.jboss.tools.project.examples.cheatsheet.openFileInEditor(path=/${currentProject}/src/main/java/org/jboss/as/quickstarts/html5_mobile/rest/MemberService.java,fromLine=90,toLine=92)"/>
    </subitem>
    <subitem
            label="Talk about other stuff ... "
            skip="true">
      <command
        required="false"
        serialization="org.jboss.tools.project.examples.cheatsheet.openFileInEditor(path=/${currentProject}/src/main/java/org/jboss/as/quickstarts/html5_mobile/rest/MemberService.java,fromLine=1,toLine=1)"/>
    </subitem>
  
  </item>

  <item
    skip="true"
    title="Create your own application ">
    <description>
      What we didn&apos;t tell you about the <b>kitchensink-html5-mobile quickstart</b> is that it is generated from a Maven archetype. 
      Using this archetype offers you the perfect opportunity to generate your own project.
      <br/><br/>
      In order to perform that, you should select <b>Help&gt;JBoss Central</b> and click the <b>HTML5 Project</b> wizard.
      <br/>
      You will get a brand new project with the same functionality as <b>kitchensink-html5-mobile</b>, 
      but customized with your details.
    </description>
  </item>
  
</cheatsheet>
